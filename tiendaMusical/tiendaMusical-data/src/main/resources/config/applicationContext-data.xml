<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/data/jpa
        https://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

        <!--Permite el uso de anotaciones con spring en el base package mencionado--> 
        
	<context:annotation-config></context:annotation-config>
	<context:component-scan base-package="com.softdesarrolladores"></context:component-scan>
        
        <!--Se carga el archivo de configuración properties-->
        
        <context:property-placeholder location="classpath*:config/application-properties.properties"/>
        
        <!--Bean que se encarga de realizar la conexión a la base de datos-->
        
        <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
                <property name="driverClassName" value="${spring-dataSource.driverClassName}"></property>
                <property name="url" value="${spring-dataSource.url}"></property>
                <property name="username" value="${spring-dataSource.username}"></property>
                <property name="password" value="${spring-dataSource.password}"></property>
            
<!--            <property name="minPoolSize" value="5"></property>
            <property name="maxPoolSize" value="10"></property>
            <property name="maxIdleTime" value="30000"></property>-->
        </bean>
        
         <!--Bean que se encarga de administrar y registrar los entities de jpa y sus propiedades-->
         
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="dataSource" ref="dataSource"></property>
            <property name="packagesToScan" value="com.softdesarrolladores.tiendamusicalentities.entities"></property>
            <property name="jpaProperties">
                <props>
                    <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                    <prop key="hibernate.show_sql">true</prop>
                    <prop key="hibernate.jdbc.time_zone">America/Guayaquil</prop>
                </props>
            </property>
            <property name="persistenceProvider">
                <bean class="org.hibernate.jpa.HibernatePersistenceProvider"></bean>
            </property>
        </bean>
        
        
	 <!--Bean que se encarga de gestionar las transacciones para el crud de los entities--> 
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
            <property name="dataSource" ref="dataSource"></property>
        </bean>
        
        <!--Etiqueta que permite utilizar la anotacion @Transactional de spring para ejecutar transacciones de jpa-->
        
        <tx:annotation-driven transaction-manager="transactionManager"/>
        
        <!--Etiqueta que permite registrar las clases que se encargan de ejecutar las transacciones a la base de datos (DAO)-->
        
        <jpa:repositories base-package="com.softdesarrolladores.tiendamusicaldata.repositories" entity-manager-factory-ref="entityManagerFactory"></jpa:repositories>
</beans>